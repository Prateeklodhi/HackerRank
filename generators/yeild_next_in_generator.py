'''
In this we are going to demonstrate the use of yield and next, 
yeild keyword is used to tell the interprator that this function is a ganerator beacause it's going to yield a value
every time the next function is call it yields the next value.
the meaning of yield is produce it means it produces a value every time the funtion is called using next.
'''
import random
def generator_func(iterator_value_range):
    for item in range(iterator_value_range):
        yield f'{(random.random()*10):.0f}'
    
print(generator_func) # print the memory location and the generator funciton

generator_object = generator_func(10)
print(generator_object)# print the memory location and the generator object
print(next(generator_object)) # print the generator objects value as it is called for the first time it print 0
next(generator_object)# 1
next(generator_object)# 2
next(generator_object)# 3
print(next(generator_object)) # print the last value generated by the generator i.e. 4